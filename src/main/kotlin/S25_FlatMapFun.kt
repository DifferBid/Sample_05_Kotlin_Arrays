
package org.example

fun main() {
    /**-----Example 01-----*/
    // Пример использования flatMap():

    val nestedList = listOf(
        listOf(1, 2, 3),
        listOf(4, 5, 6)
    )

    val result = nestedList.flatMap { it }
    println(result) // InConsole: [1, 2, 3, 4, 5, 6]
    // В данном примере nestedList — это список списков. Мы применяем flatMap() ко всей коллекции nestedList,
    // передавая в качестве аргумента лямбда-функцию { it }, которая просто возвращает каждый внутренний список без изменений.
    // flatMap() объединяет все внутренние списки в один плоский список result, содержащий все элементы из исходных списков.

    /**-----Example 02-----*/
    // Метод flatten() в Kotlin также используется для преобразования коллекции коллекций в одну "плоскую" коллекцию.
    // В отличие от flatMap(), который требует функцию для преобразования элементов, flatten() просто объединяет все элементы вложенных коллекций в одну коллекцию, без какого-либо дополнительного преобразования.
    val resultFlatten = nestedList.flatten()
    println(resultFlatten)

    // В этом примере nestedList — это список списков, как и в случае с flatMap().
    // Мы применяем метод flatten(), чтобы объединить все внутренние списки в один "плоский" список result, содержащий все элементы из исходных списков.
}