
package org.example

fun main() {
    /**-----Example 01-----*/
    // Рассмотрим пример, где мы используем sum() для подсчета суммы чисел в массиве:
    val array = arrayOf(1, 2, 3, 4, 5) // Создаем массив из целых чисел
    println(array.sum()) // InConsole: 15
    // В этом примере массив array содержит числа 1, 2, 3, 4 и 5. Функция sum() суммирует все элементы массива и возвращает результат, который равен 15.
    // Тип возвращаемого значения: Функция sum() возвращает сумму в виде значения соответствующего типа.
    // Для массивов типа IntArray или Array<Int> результат будет типа Int.
    // Для массивов DoubleArray или Array<Double> результат будет типа Double, и так далее.

    /**-----Example 02-----*/
    // Рассмотрим примеры с массивами других числовых типов:
    val doubleArray = doubleArrayOf(1.5, 2.5, 3.5)
    println(doubleArray.sum()) // InConsole: 7.5

    val longArray = longArrayOf(1000000000L, 2000000000L, 3000000000L)
    println(longArray.sum()) // InConsole: 6000000000

    val floatArray = floatArrayOf(1.0f, 2.0f, 3.0f)
    println(floatArray.sum()) // InConsole: 6.0

    // В случае массива doubleArray функция sum() возвращает сумму 7.5.
    // В случае массива longArray функция sum() возвращает сумму 6000000000.
    // В случае массива floatArray функция sum() возвращает сумму 6.0.
    // ИТОГ: функция sum() является удобным и простым способом подсчета суммы элементов в числовых массивах различных типов в Kotlin.

}

