
package org.example

fun main() {

    /**-----Example 01-----*/
    // Обычный перебор через for
    // Это самый простой и распространенный способ перебора элементов массива.
    // Он используется, когда требуется пройти по всем элементам массива и выполнить определенные действия с каждым элементом.
    val arr = arrayOf(1, 2, 3, 4, 5)

    for (i in arr) {
        println("Значение элемента равно $i")
        /* InConsole:
        Значение элемента равно 1
        Значение элемента равно 2
        Значение элемента равно 3
        Значение элемента равно 4
        Значение элемента равно 5
        */
    }
    // В ЭТОМ ПРИМЕРЕ: переменная i на каждой итерации цикла принимает значение текущего элемента массива arr.

    /**-----Example 02-----*/
    // Перебор с использованием forEach
    // Метод forEach — это встроенная функция в Kotlin, которая позволяет перебрать элементы массива, применяя к каждому элементу переданное лямбда-выражение.
    arr.forEach { i -> println("Значение элемента равно $i") }
    /* InConsole:
       Значение элемента равно 1
       Значение элемента равно 2
       Значение элемента равно 3
       Значение элемента равно 4
       Значение элемента равно 5
       */

    // В ЭТОМ ПРИМЕРЕ: forEach проходит по каждому элементу массива arr, передавая его в лямбда-выражение { i -> println("Значение элемента равно $i") }.

    /**-----Example 03-----*/
    // Перебор с использованием forEachIndexed
    // Когда нужно знать не только значение элемента, но и его индекс, используется метод forEachIndexed.
    // Этот метод также принимает лямбда-выражение, но передает в него два параметра: индекс и значение элемента.
    arr.forEachIndexed { index, element ->
        println("$index : $element")
    }
    /* InConsole:
    0 : 1
    1 : 2
    2 : 3
    3 : 4
    4 : 5
    */
    // В ЭТОМ ПРИМЕРЕ: метод forEachIndexed передает индекс элемента массива arr в переменную index,
    // а значение элемента — в переменную element. Это позволяет вывести как индекс, так и значение элемента.

}